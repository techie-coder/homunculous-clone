{"id":"node_modules/three/examples/jsm/shaders/CopyShader.js","dependencies":[{"name":"/Users/s4swata/Projects/three/homunculous/landing/package.json","includedInParent":true,"mtime":1744698815492},{"name":"/Users/s4swata/Projects/three/homunculous/landing/node_modules/three/package.json","includedInParent":true,"mtime":1744698815215}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyShader = void 0;\n/** @module CopyShader */\n\n/**\n * Full-screen copy shader pass.\n *\n * @constant\n * @type {ShaderMaterial~Shader}\n */\nvar CopyShader = exports.CopyShader = {\n  name: 'CopyShader',\n  uniforms: {\n    'tDiffuse': {\n      value: null\n    },\n    'opacity': {\n      value: 1.0\n    }\n  },\n  vertexShader: /* glsl */\"\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvUv = uv;\\n\\t\\t\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n\\n\\t\\t}\",\n  fragmentShader: /* glsl */\"\\n\\n\\t\\tuniform float opacity;\\n\\n\\t\\tuniform sampler2D tDiffuse;\\n\\n\\t\\tvarying vec2 vUv;\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvec4 texel = texture2D( tDiffuse, vUv );\\n\\t\\t\\tgl_FragColor = opacity * texel;\\n\\n\\n\\t\\t}\"\n};"},"sourceMaps":null,"error":null,"hash":"04930c5d5501c7ffc5c727d8f28da76f","cacheData":{"env":{}}}
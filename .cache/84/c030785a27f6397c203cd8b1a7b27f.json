{"id":"node_modules/three/examples/jsm/postprocessing/Pass.js","dependencies":[{"name":"/Users/s4swata/Projects/three/homunculous/landing/package.json","includedInParent":true,"mtime":1744698815492},{"name":"/Users/s4swata/Projects/three/homunculous/landing/node_modules/three/package.json","includedInParent":true,"mtime":1744698815215},{"name":"three","loc":{"line":6,"column":7,"index":85},"parent":"/Users/s4swata/Projects/three/homunculous/landing/node_modules/three/examples/jsm/postprocessing/Pass.js","resolved":"/Users/s4swata/Projects/three/homunculous/landing/node_modules/three/build/three.module.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Pass = exports.FullScreenQuad = void 0;\nvar _three = require(\"three\");\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Abstract base class for all post processing passes.\n *\n * This module is only relevant for post processing with {@link WebGLRenderer}.\n *\n * @abstract\n */\nvar Pass = exports.Pass = /*#__PURE__*/function () {\n  /**\n   * Constructs a new pass.\n   */\n  function Pass() {\n    _classCallCheck(this, Pass);\n    /**\n     * This flag can be used for type testing.\n     *\n     * @type {boolean}\n     * @readonly\n     * @default true\n     */\n    this.isPass = true;\n\n    /**\n     * If set to `true`, the pass is processed by the composer.\n     *\n     * @type {boolean}\n     * @default true\n     */\n    this.enabled = true;\n\n    /**\n     * If set to `true`, the pass indicates to swap read and write buffer after rendering.\n     *\n     * @type {boolean}\n     * @default true\n     */\n    this.needsSwap = true;\n\n    /**\n     * If set to `true`, the pass clears its buffer before rendering\n     *\n     * @type {boolean}\n     * @default false\n     */\n    this.clear = false;\n\n    /**\n     * If set to `true`, the result of the pass is rendered to screen. The last pass in the composers\n     * pass chain gets automatically rendered to screen, no matter how this property is configured.\n     *\n     * @type {boolean}\n     * @default false\n     */\n    this.renderToScreen = false;\n  }\n\n  /**\n   * Sets the size of the pass.\n   *\n   * @abstract\n   * @param {number} width - The width to set.\n   * @param {number} height - The width to set.\n   */\n  return _createClass(Pass, [{\n    key: \"setSize\",\n    value: function setSize(/* width, height */) {}\n\n    /**\n     * This method holds the render logic of a pass. It must be implemented in all derived classes.\n     *\n     * @abstract\n     * @param {WebGLRenderer} renderer - The renderer.\n     * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n     * destination for the pass.\n     * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n     * previous pass from this buffer.\n     * @param {number} deltaTime - The delta time in seconds.\n     * @param {boolean} maskActive - Whether masking is active or not.\n     */\n  }, {\n    key: \"render\",\n    value: function render(/* renderer, writeBuffer, readBuffer, deltaTime, maskActive */\n    ) {\n      console.error('THREE.Pass: .render() must be implemented in derived pass.');\n    }\n\n    /**\n     * Frees the GPU-related resources allocated by this instance. Call this\n     * method whenever the pass is no longer used in your app.\n     *\n     * @abstract\n     */\n  }, {\n    key: \"dispose\",\n    value: function dispose() {}\n  }]);\n}(); // Helper for passes that need to fill the viewport with a single quad.\nvar _camera = new _three.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n\n// https://github.com/mrdoob/three.js/pull/21358\nvar FullscreenTriangleGeometry = /*#__PURE__*/function (_BufferGeometry) {\n  function FullscreenTriangleGeometry() {\n    var _this;\n    _classCallCheck(this, FullscreenTriangleGeometry);\n    _this = _callSuper(this, FullscreenTriangleGeometry);\n    _this.setAttribute('position', new _three.Float32BufferAttribute([-1, 3, 0, -1, -1, 0, 3, -1, 0], 3));\n    _this.setAttribute('uv', new _three.Float32BufferAttribute([0, 2, 0, 0, 2, 0], 2));\n    return _this;\n  }\n  _inherits(FullscreenTriangleGeometry, _BufferGeometry);\n  return _createClass(FullscreenTriangleGeometry);\n}(_three.BufferGeometry);\nvar _geometry = new FullscreenTriangleGeometry();\n\n/**\n * This module is a helper for passes which need to render a full\n * screen effect which is quite common in context of post processing.\n *\n * The intended usage is to reuse a single full screen quad for rendering\n * subsequent passes by just reassigning the `material` reference.\n *\n * This module can only be used with {@link WebGLRenderer}.\n *\n * @augments Mesh\n */\nvar FullScreenQuad = exports.FullScreenQuad = /*#__PURE__*/function () {\n  /**\n   * Constructs a new full screen quad.\n   *\n   * @param {?Material} material - The material to render te full screen quad with.\n   */\n  function FullScreenQuad(material) {\n    _classCallCheck(this, FullScreenQuad);\n    this._mesh = new _three.Mesh(_geometry, material);\n  }\n\n  /**\n   * Frees the GPU-related resources allocated by this instance. Call this\n   * method whenever the instance is no longer used in your app.\n   */\n  return _createClass(FullScreenQuad, [{\n    key: \"dispose\",\n    value: function dispose() {\n      this._mesh.geometry.dispose();\n    }\n\n    /**\n     * Renders the full screen quad.\n     *\n     * @param {WebGLRenderer} renderer - The renderer.\n     */\n  }, {\n    key: \"render\",\n    value: function render(renderer) {\n      renderer.render(this._mesh, _camera);\n    }\n\n    /**\n     * The quad's material.\n     *\n     * @type {?Material}\n     */\n  }, {\n    key: \"material\",\n    get: function get() {\n      return this._mesh.material;\n    },\n    set: function set(value) {\n      this._mesh.material = value;\n    }\n  }]);\n}();"},"sourceMaps":null,"error":null,"hash":"05bf8366ac4d7579aa311bf76fb1318d","cacheData":{"env":{}}}
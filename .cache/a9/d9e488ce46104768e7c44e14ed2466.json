{"id":"node_modules/three/examples/jsm/postprocessing/ShaderPass.js","dependencies":[{"name":"/Users/s4swata/Projects/Lopt/frontend/package.json","includedInParent":true,"mtime":1744624320180},{"name":"/Users/s4swata/Projects/Lopt/frontend/node_modules/three/package.json","includedInParent":true,"mtime":1744624308174},{"name":"three","loc":{"line":4,"column":7,"index":48},"parent":"/Users/s4swata/Projects/Lopt/frontend/node_modules/three/examples/jsm/postprocessing/ShaderPass.js","resolved":"/Users/s4swata/Projects/Lopt/frontend/node_modules/three/build/three.module.js"},{"name":"./Pass.js","loc":{"line":5,"column":37,"index":94},"parent":"/Users/s4swata/Projects/Lopt/frontend/node_modules/three/examples/jsm/postprocessing/ShaderPass.js","resolved":"/Users/s4swata/Projects/Lopt/frontend/node_modules/three/examples/jsm/postprocessing/Pass.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ShaderPass = void 0;\nvar _three = require(\"three\");\nvar _Pass2 = require(\"./Pass.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(t, e) { if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e; if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\"); return _assertThisInitialized(t); }\nfunction _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); return e; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }\nfunction _inherits(t, e) { if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, \"prototype\", { writable: !1 }), e && _setPrototypeOf(t, e); }\nfunction _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }\n/**\n * This pass can be used to create a post processing effect\n * with a raw GLSL shader object. Useful for implementing custom\n * effects.\n *\n * ```js\n * const fxaaPass = new ShaderPass( FXAAShader );\n * composer.addPass( fxaaPass );\n * ```\n *\n * @augments Pass\n */\nvar ShaderPass = exports.ShaderPass = /*#__PURE__*/function (_Pass) {\n  /**\n   * Constructs a new shader pass.\n   *\n   * @param {Object|ShaderMaterial} [shader] - A shader object holding vertex and fragment shader as well as\n   * defines and uniforms. It's also valid to pass a custom shader material.\n   * @param {string} [textureID='tDiffuse'] - The name of the texture uniform that should sample\n   * the read buffer.\n   */\n  function ShaderPass(shader) {\n    var _this;\n    var textureID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'tDiffuse';\n    _classCallCheck(this, ShaderPass);\n    _this = _callSuper(this, ShaderPass);\n\n    /**\n     * The name of the texture uniform that should sample the read buffer.\n     *\n     * @type {string}\n     * @default 'tDiffuse'\n     */\n    _this.textureID = textureID;\n\n    /**\n     * The pass uniforms.\n     *\n     * @type {?Object}\n     */\n    _this.uniforms = null;\n\n    /**\n     * The pass material.\n     *\n     * @type {?ShaderMaterial}\n     */\n    _this.material = null;\n    if (shader instanceof _three.ShaderMaterial) {\n      _this.uniforms = shader.uniforms;\n      _this.material = shader;\n    } else if (shader) {\n      _this.uniforms = _three.UniformsUtils.clone(shader.uniforms);\n      _this.material = new _three.ShaderMaterial({\n        name: shader.name !== undefined ? shader.name : 'unspecified',\n        defines: Object.assign({}, shader.defines),\n        uniforms: _this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n\n    // internals\n\n    _this._fsQuad = new _Pass2.FullScreenQuad(_this.material);\n    return _this;\n  }\n\n  /**\n   * Performs the shader pass.\n   *\n   * @param {WebGLRenderer} renderer - The renderer.\n   * @param {WebGLRenderTarget} writeBuffer - The write buffer. This buffer is intended as the rendering\n   * destination for the pass.\n   * @param {WebGLRenderTarget} readBuffer - The read buffer. The pass can access the result from the\n   * previous pass from this buffer.\n   * @param {number} deltaTime - The delta time in seconds.\n   * @param {boolean} maskActive - Whether masking is active or not.\n   */\n  _inherits(ShaderPass, _Pass);\n  return _createClass(ShaderPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n      if (this.uniforms[this.textureID]) {\n        this.uniforms[this.textureID].value = readBuffer.texture;\n      }\n      this._fsQuad.material = this.material;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this._fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n        if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n        this._fsQuad.render(renderer);\n      }\n    }\n\n    /**\n     * Frees the GPU-related resources allocated by this instance. Call this\n     * method whenever the pass is no longer used in your app.\n     */\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.material.dispose();\n      this._fsQuad.dispose();\n    }\n  }]);\n}(_Pass2.Pass);"},"sourceMaps":null,"error":null,"hash":"ec994b95edcd91fda928f3fb3e13c72e","cacheData":{"env":{}}}